UF /uf
    campos: codigoUF, sigla, nome, status

    get - consultar - 200
        listar todos
        consultar pela sigla (idêntica)
        consultar pelo codigoUF (idêntico)

    post - gravar - 201
        um por vez
        codigoUF (deve ser gerado via auto incremento  ou sequence)
        dados que serão passados:
        sigla
        nome
        status

    PUT - alterar - 200
        dados que serão passados:
        codigoUF
        sigla
        nome
        status

    delete - deletar (OPCIONAL) - 200
        dados que serão passados:
        codigoUF

MUNICIPIO /municipio
    campos: codigoMunicipio, codigoUF, nome, status

    GET - consultar - 200
        listar todos
        listar pelo codigoUF (idêntico)
        consultar pelo codigoMunicipio (idêntico)
        consultar pelo nome (idêntico)

    POST - gravar -201
        deve ser gravado um por vez (JSON)
        codigoMunicipio (deve ser gerado via auto incremento  ou sequence)
        dados que serão passados:
        codigoUF
        nome
        status

    PUT - alterar (JSON) - 200
        dados que serão passados:
        codigoMunicipio
        codigoUF
        nome
        status

    DELETE - deletar (OPCIONAL) - 200
        dados que serão passados:
        codigoMunicipio

BAIRRO /bairro
    campos: codigoBairro, codigoMunicipio, nome, status

    GET - consultar - 200
        listar todos
        listar pelo codigoMunicipio (idêntico)
        consultar pelo codigoBairro (idêntico)

    POST - gravar - 201
        deve ser gravado um por vez
        codigoBairro (deve ser gerado via auto incremento  ou sequence)
        dados que serão passados:
        codigoMunicipio
        nome
        status

    PUT - 200
        dados que serão passados:
        codigoBairro
        codigoMunicipio
        nome
        status

    DELETE - deletar (OPCIONAL) - 200
        dados que serão passados:
        codigoBairro


PESSOA /pessoa
    campos: codigoPessoa, nome, sobrenome, idade, login, senha, status
    [campos endereço]: codigoEndereco, codigoPessoa, codigoBairro, nomeRua, numero, complemento, cep

    GET - consultar
        listar todos (trago apenas os dados da tabela pessoa)
        consultar pelo codigoPessoa (idêntico) (trago os dados de todas as tabelas vinculadas ao registro de pessoa)

    POST - gravar
        deve ser gravado um por vez
        codigoPessoa (deve ser gerado via auto incremento  ou sequence)
        dados que serão passados:
        nome, sobrenome, idade, login, senha, status
        array de endereços: codigoBairro, nomeRua, numero, complemento, cep

    PUT
        dados que serão passados:
        codigoPessoa, nome, sobrenome, idade, login, senha, status
        array de endereços: codigoEndereco, codigoPessoa, codigoBairro, nomeRua, numero, complemento, cep

    DELETE - deletar (OPCIONAL)
        dados que serão passados:
        codigoPessoa

ERRO: EXEMPLO - STATUS 404
{
    "status": 404,
    "mensagem": "Nao existe nenhuma UF com este codigo."
}

=> return response.status(404).json({status: 404, mensagem: 'Nao foi possivel fazer conexao com o banco.'});



ormconfig.json:

{
  "type": "oracle",
  "host": "localhost",
  "port": 1521,
  "username": "C##VICTOR",
  "password": "senha",
  "database": "xe",
  "entity": ["./src/modules/ufs/typeorm/entities/*.ts"]
}

scripts:

//CONECTADO COM O USUÁRIO SYSTEM
grant create session to NOME_DO_SEU_USUARIO;
grant create table, create sequence, create user, create session to NOME_DO_SEU_USUARIO with admin option;
grant dba to NOME_DO_SEU_USUARIO with admin option;

criação das tabelas:

SET SQLBLANKLINES ON CREATE TABLE TB_PESSOA (  CODIGO_PESSOA NUMBER(9) NOT NULL , NOME VARCHAR(256) NOT NULL , SOBRENOME VARCHAR2(256) NOT NULL , IDADE NUMBER(3) NOT NULL , LOGIN VARCHAR2(50) NOT NULL , SENHA VARCHAR2(50) NOT NULL , STATUS NUMBER(3) NOT NULL , CONSTRAINT TB_PESSOA_PK PRIMARY KEY   (    CODIGO_PESSOA   )  ENABLE );

CREATE TABLE TB_UF (  CODIGO_UF NUMBER(9) NOT NULL , SIGLA VARCHAR2(3) NOT NULL , NOME VARCHAR2(60) NOT NULL , STATUS NUMBER(3) NOT NULL , CONSTRAINT TB_UF_PK PRIMARY KEY   (    CODIGO_UF   )  ENABLE );

CREATE TABLE TB_MUNICIPIO (  CODIGO_MUNICIPIO NUMBER(9) NOT NULL , CODIGO_UF NUMBER(9) NOT NULL , NOME VARCHAR2(256) , STATUS NUMBER(3) , CONSTRAINT TB_MUNICIPIO_PK PRIMARY KEY   (    CODIGO_MUNICIPIO   )  ENABLE );

CREATE TABLE TB_BAIRRO (  CODIGO_BAIRRO NUMBER(9) NOT NULL , CODIGO_MUNICIPIO NUMBER(9) NOT NULL , NOME VARCHAR2(256) NOT NULL , STATUS NUMBER(3) , CONSTRAINT TB_BAIRRO_PK PRIMARY KEY   (    CODIGO_BAIRRO   )  ENABLE );

CREATE TABLE TB_ENDERECO (  CODIGO_ENDERECO NUMBER(9) NOT NULL , CODIGO_PESSOA NUMBER(9) NOT NULL , CODIGO_BAIRRO NUMBER(9) NOT NULL , NOME_RUA VARCHAR2(256) NOT NULL , NUMERO VARCHAR2(10) NOT NULL , COMPLEMENTO VARCHAR2(20) , CEP VARCHAR2(10) NOT NULL , CONSTRAINT TB_ENDERECO_PK PRIMARY KEY   (    CODIGO_ENDERECO   )  ENABLE );

ALTER TABLE TB_BAIRRO ADD CONSTRAINT TB_BAIRRO_FK1 FOREIGN KEY (  CODIGO_MUNICIPIO ) REFERENCES TB_MUNICIPIO (  CODIGO_MUNICIPIO ) ENABLE;

ALTER TABLE TB_ENDERECO ADD CONSTRAINT TB_ENDERECO_FK1 FOREIGN KEY (  CODIGO_PESSOA ) REFERENCES TB_PESSOA (  CODIGO_PESSOA ) ENABLE;

ALTER TABLE TB_ENDERECO ADD CONSTRAINT TB_ENDERECO_FK2 FOREIGN KEY (  CODIGO_BAIRRO ) REFERENCES TB_BAIRRO (  CODIGO_BAIRRO ) ENABLE;

ALTER TABLE TB_MUNICIPIO ADD CONSTRAINT TB_MUNICIPIO_FK1 FOREIGN KEY (  CODIGO_UF ) REFERENCES TB_UF (  CODIGO_UF
) ENABLE;

COMMENT ON COLUMN TB_UF.STATUS IS '1 - ATIVADO 2 - DESATIVADO';

COMMENT ON COLUMN TB_MUNICIPIO.STATUS IS '1 - ATIVADO 2 - DESATIVADO';

COMMENT ON COLUMN TB_BAIRRO.STATUS IS '1- ATIVADO 2- DESATIVADO';

COMMENT ON COLUMN TB_PESSOA.STATUS IS '1 - ATIVADO 2 - DESATIVADO';

CREATE SEQUENCE SEQUENCE_PESSOA INCREMENT BY 1 START WITH 1 MAXVALUE 999999999 MINVALUE 1 NOCACHE;

CREATE SEQUENCE SEQUENCE_BAIRRO INCREMENT BY 1 START WITH 1 MAXVALUE 999999999 MINVALUE 1 NOCACHE;

CREATE SEQUENCE SEQUENCE_MUNICIPIO INCREMENT BY 1 START WITH 1 MAXVALUE 999999999 MINVALUE 1 NOCACHE;

CREATE SEQUENCE SEQUENCE_UF INCREMENT BY 1 START WITH 1 MAXVALUE 999999999 MINVALUE 1 NOCACHE;

CREATE SEQUENCE SEQUENCE_ENDERECO INCREMENT BY 1 START WITH 1 MAXVALUE 999999999 MINVALUE 1 NOCACHE;
